{
  "version": 3,
  "sources": ["../../../../../node_modules/@uploadcare/react-widget/dist/esm/uploader-3688e7ce.mjs"],
  "sourcesContent": ["import { _ as _objectWithoutProperties, a as _objectSpread2 } from './index-881e303a.mjs';\nimport React, { useEffect, useRef, useImperativeHandle, useCallback } from 'react';\nimport uploadcare from 'uploadcare-widget';\nimport { u as useCommitedCallback, a as useCustomTabs, b as useDeepEffect, d as defaultPreviewUrlCallback } from './default-preview-url-callback-19e28ce7.mjs';\nimport isEqual from 'react-fast-compare';\n\nvar useValidators = function useValidators(widget, validators) {\n  useEffect(function () {\n    if (validators != null) {\n      var instance = widget.current;\n      validators.forEach(function (validator) {\n        instance.validators.push(validator);\n      });\n      return function () {\n        instance.validators.length = 0;\n      };\n    }\n  }, [widget, validators]);\n};\n\nfunction useDeepMemo(factory, deps) {\n  var isValid = true;\n  var valueRef = useRef();\n  // initial hook call\n  if (!valueRef.current) {\n    valueRef.current = {\n      deps: deps,\n      result: factory()\n    };\n    // subsequent calls\n  } else {\n    isValid = !!(deps && valueRef.current.deps && isEqual(deps, valueRef.current.deps));\n  }\n  var cache = isValid ? valueRef.current : {\n    deps: deps,\n    result: factory()\n  };\n  // must update immediately so any sync renders here don't cause an infinite loop\n  valueRef.current = cache;\n  return cache.result;\n}\n\nvar _excluded = [\"id\", \"name\", \"value\", \"onFileSelect\", \"onChange\", \"onDialogOpen\", \"onDialogClose\", \"onTabChange\", \"apiRef\", \"customTabs\", \"validators\", \"tabsCss\", \"locale\", \"localeTranslations\", \"localePluralize\", \"previewUrlCallback\", \"metadataCallback\"];\nvar useWidget = function useWidget(_ref, uploadcare) {\n  var id = _ref.id,\n    name = _ref.name,\n    value = _ref.value,\n    onFileSelect = _ref.onFileSelect,\n    onChange = _ref.onChange,\n    onDialogOpen = _ref.onDialogOpen,\n    onDialogClose = _ref.onDialogClose,\n    onTabChange = _ref.onTabChange,\n    apiRef = _ref.apiRef,\n    customTabs = _ref.customTabs,\n    validators = _ref.validators,\n    tabsCss = _ref.tabsCss,\n    locale = _ref.locale,\n    localeTranslations = _ref.localeTranslations,\n    localePluralize = _ref.localePluralize,\n    previewUrlCallback = _ref.previewUrlCallback,\n    metadataCallback = _ref.metadataCallback,\n    options = _objectWithoutProperties(_ref, _excluded);\n  var input = useRef(null);\n  var widget = useRef(null);\n  var cachedValueRef = useRef(null);\n  var fileSelectedCallback = useCommitedCallback(onFileSelect);\n  var changeCallback = useCommitedCallback(onChange);\n  var dialogOpenCallback = useCommitedCallback(onDialogOpen);\n  var dialogCloseCallback = useCommitedCallback(onDialogClose);\n  var tabChangeCallback = useCommitedCallback(onTabChange);\n  var metadataCommitedCallback = useCommitedCallback(metadataCallback);\n  var previewUrlCommitedCallback = useCommitedCallback(previewUrlCallback || defaultPreviewUrlCallback);\n  var widgetOptions = useDeepMemo(function () {\n    return options;\n  }, [options]);\n  useCustomTabs(customTabs, uploadcare);\n  useDeepEffect(function () {\n    if (locale) window.UPLOADCARE_LOCALE = locale;\n    if (localePluralize) window.UPLOADCARE_LOCALE_PLURALIZE = localePluralize;\n    if (localeTranslations) {\n      window.UPLOADCARE_LOCALE_TRANSLATIONS = localeTranslations;\n    }\n    uploadcare.plugin(function (internal) {\n      internal.locale.rebuild({\n        locale: locale || null,\n        localeTranslations: localeTranslations || null,\n        localePluralize: localePluralize || null\n      });\n    });\n    return function () {\n      if (locale) delete window.UPLOADCARE_LOCALE;\n      if (localePluralize) delete window.UPLOADCARE_LOCALE_PLURALIZE;\n      if (localeTranslations) delete window.UPLOADCARE_LOCALE_TRANSLATIONS;\n    };\n  }, [locale, localeTranslations, localePluralize]);\n  useEffect(function () {\n    var inputEl = input.current;\n    widget.current = uploadcare.Widget(inputEl, _objectSpread2(_objectSpread2({}, widgetOptions), {}, {\n      metadataCallback: widgetOptions.metadata ? undefined : metadataCommitedCallback,\n      previewUrlCallback: previewUrlCommitedCallback\n    }));\n    var widgetElement = inputEl.nextSibling;\n    if (cachedValueRef.current) {\n      // restore widget value when called twice in React.StrictMode\n      widget.current.value(cachedValueRef.current);\n    }\n    return function () {\n      // useEffect could be called twice inside React.StrictMode\n      // to reinitialize widget on the same input element, we need to cleanup bounded jquery data on it\n      // `uploadcareWidget` is a data attr that is used to store widget api\n      // see https://github.com/uploadcare/uploadcare-widget/blob/feat/unsplash-tab/src/widget/live.js#L11\n      uploadcare.jQuery(inputEl).removeData('uploadcareWidget');\n      widgetElement && widgetElement.remove();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [uploadcare, widgetOptions, metadataCommitedCallback, previewUrlCommitedCallback]);\n  useValidators(widget, validators);\n  useEffect(function () {\n    widget.current.onUploadComplete.add(changeCallback);\n    widget.current.onChange.add(fileSelectedCallback);\n    return function () {\n      widget.current.onUploadComplete.remove(changeCallback);\n      widget.current.onChange.remove(fileSelectedCallback);\n    };\n  }, [changeCallback, fileSelectedCallback, uploadcare, widgetOptions]);\n  useEffect(function () {\n    var dialog;\n    var saveDialog = function saveDialog(ref) {\n      dialog = ref;\n      dialog.done(dialogCloseCallback).fail(dialogCloseCallback).progress(tabChangeCallback);\n      dialogOpenCallback(ref);\n    };\n    widget.current.onDialogOpen.add(saveDialog);\n    return function () {\n      widget.current.onDialogOpen.remove(saveDialog);\n      dialog && dialog.reject();\n    };\n  }, [dialogCloseCallback, dialogOpenCallback, tabChangeCallback, widgetOptions]);\n  useEffect(function () {\n    var files = [];\n    var saveFiles = function saveFiles(file) {\n      if (file) {\n        files = file.files ? file.files() : [file];\n      } else {\n        files = [];\n      }\n    };\n    widget.current.onChange.add(saveFiles);\n    return function () {\n      files.forEach(function (file) {\n        return file.cancel();\n      });\n      widget.current.onChange.remove(saveFiles);\n    };\n  }, [widgetOptions]);\n  useEffect(function () {\n    if (cachedValueRef.current !== value) {\n      widget.current.value(value);\n    }\n    cachedValueRef.current = value;\n  }, [value]);\n  useEffect(function () {\n    if (uploadcare && tabsCss && typeof tabsCss === 'string') {\n      if (tabsCss.indexOf('https://') === 0) {\n        uploadcare.tabsCss.addUrl(tabsCss);\n      } else {\n        uploadcare.tabsCss.addStyle(tabsCss);\n      }\n    }\n  }, [uploadcare, tabsCss]);\n  useImperativeHandle(apiRef, function () {\n    return {\n      openDialog: function openDialog() {\n        return widget.current.openDialog();\n      },\n      reloadInfo: function reloadInfo() {\n        return widget.current.reloadInfo();\n      },\n      getInput: function getInput() {\n        return widget.current.inputElement;\n      },\n      value: function value(_value) {\n        return widget.current.value(_value);\n      }\n    };\n  }, []);\n  return useCallback(function () {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      type: \"hidden\",\n      ref: input,\n      id: id,\n      name: name\n    });\n  }, [id, name]);\n};\nvar Uploader = function Uploader(props) {\n  var Input = useWidget(props, uploadcare);\n  return /*#__PURE__*/React.createElement(Input, null);\n};\n\nexport { Uploader as default };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AACA,mBAA2E;AAC3E,+BAAuB;AAEvB,gCAAoB;AAEpB,IAAI,gBAAgB,SAASA,eAAc,QAAQ,YAAY;AAC7D,8BAAU,WAAY;AACpB,QAAI,cAAc,MAAM;AACtB,UAAI,WAAW,OAAO;AACtB,iBAAW,QAAQ,SAAU,WAAW;AACtC,iBAAS,WAAW,KAAK,SAAS;AAAA,MACpC,CAAC;AACD,aAAO,WAAY;AACjB,iBAAS,WAAW,SAAS;AAAA,MAC/B;AAAA,IACF;AAAA,EACF,GAAG,CAAC,QAAQ,UAAU,CAAC;AACzB;AAEA,SAAS,YAAY,SAAS,MAAM;AAClC,MAAI,UAAU;AACd,MAAI,eAAW,qBAAO;AAEtB,MAAI,CAAC,SAAS,SAAS;AACrB,aAAS,UAAU;AAAA,MACjB;AAAA,MACA,QAAQ,QAAQ;AAAA,IAClB;AAAA,EAEF,OAAO;AACL,cAAU,CAAC,EAAE,QAAQ,SAAS,QAAQ,YAAQ,0BAAAC,SAAQ,MAAM,SAAS,QAAQ,IAAI;AAAA,EACnF;AACA,MAAI,QAAQ,UAAU,SAAS,UAAU;AAAA,IACvC;AAAA,IACA,QAAQ,QAAQ;AAAA,EAClB;AAEA,WAAS,UAAU;AACnB,SAAO,MAAM;AACf;AAEA,IAAI,YAAY,CAAC,MAAM,QAAQ,SAAS,gBAAgB,YAAY,gBAAgB,iBAAiB,eAAe,UAAU,cAAc,cAAc,WAAW,UAAU,sBAAsB,mBAAmB,sBAAsB,kBAAkB;AAChQ,IAAI,YAAY,SAASC,WAAU,MAAMC,aAAY;AACnD,MAAI,KAAK,KAAK,IACZ,OAAO,KAAK,MACZ,QAAQ,KAAK,OACb,eAAe,KAAK,cACpB,WAAW,KAAK,UAChB,eAAe,KAAK,cACpB,gBAAgB,KAAK,eACrB,cAAc,KAAK,aACnB,SAAS,KAAK,QACd,aAAa,KAAK,YAClB,aAAa,KAAK,YAClB,UAAU,KAAK,SACf,SAAS,KAAK,QACd,qBAAqB,KAAK,oBAC1B,kBAAkB,KAAK,iBACvB,qBAAqB,KAAK,oBAC1B,mBAAmB,KAAK,kBACxB,UAAU,yBAAyB,MAAM,SAAS;AACpD,MAAI,YAAQ,qBAAO,IAAI;AACvB,MAAI,aAAS,qBAAO,IAAI;AACxB,MAAI,qBAAiB,qBAAO,IAAI;AAChC,MAAI,uBAAuB,oBAAoB,YAAY;AAC3D,MAAI,iBAAiB,oBAAoB,QAAQ;AACjD,MAAI,qBAAqB,oBAAoB,YAAY;AACzD,MAAI,sBAAsB,oBAAoB,aAAa;AAC3D,MAAI,oBAAoB,oBAAoB,WAAW;AACvD,MAAI,2BAA2B,oBAAoB,gBAAgB;AACnE,MAAI,6BAA6B,oBAAoB,sBAAsB,yBAAyB;AACpG,MAAI,gBAAgB,YAAY,WAAY;AAC1C,WAAO;AAAA,EACT,GAAG,CAAC,OAAO,CAAC;AACZ,gBAAc,YAAYA,WAAU;AACpC,gBAAc,WAAY;AACxB,QAAI,OAAQ,QAAO,oBAAoB;AACvC,QAAI,gBAAiB,QAAO,8BAA8B;AAC1D,QAAI,oBAAoB;AACtB,aAAO,iCAAiC;AAAA,IAC1C;AACA,IAAAA,YAAW,OAAO,SAAU,UAAU;AACpC,eAAS,OAAO,QAAQ;AAAA,QACtB,QAAQ,UAAU;AAAA,QAClB,oBAAoB,sBAAsB;AAAA,QAC1C,iBAAiB,mBAAmB;AAAA,MACtC,CAAC;AAAA,IACH,CAAC;AACD,WAAO,WAAY;AACjB,UAAI,OAAQ,QAAO,OAAO;AAC1B,UAAI,gBAAiB,QAAO,OAAO;AACnC,UAAI,mBAAoB,QAAO,OAAO;AAAA,IACxC;AAAA,EACF,GAAG,CAAC,QAAQ,oBAAoB,eAAe,CAAC;AAChD,8BAAU,WAAY;AACpB,QAAI,UAAU,MAAM;AACpB,WAAO,UAAUA,YAAW,OAAO,SAAS,eAAe,eAAe,CAAC,GAAG,aAAa,GAAG,CAAC,GAAG;AAAA,MAChG,kBAAkB,cAAc,WAAW,SAAY;AAAA,MACvD,oBAAoB;AAAA,IACtB,CAAC,CAAC;AACF,QAAI,gBAAgB,QAAQ;AAC5B,QAAI,eAAe,SAAS;AAE1B,aAAO,QAAQ,MAAM,eAAe,OAAO;AAAA,IAC7C;AACA,WAAO,WAAY;AAKjB,MAAAA,YAAW,OAAO,OAAO,EAAE,WAAW,kBAAkB;AACxD,uBAAiB,cAAc,OAAO;AAAA,IACxC;AAAA,EAEF,GAAG,CAACA,aAAY,eAAe,0BAA0B,0BAA0B,CAAC;AACpF,gBAAc,QAAQ,UAAU;AAChC,8BAAU,WAAY;AACpB,WAAO,QAAQ,iBAAiB,IAAI,cAAc;AAClD,WAAO,QAAQ,SAAS,IAAI,oBAAoB;AAChD,WAAO,WAAY;AACjB,aAAO,QAAQ,iBAAiB,OAAO,cAAc;AACrD,aAAO,QAAQ,SAAS,OAAO,oBAAoB;AAAA,IACrD;AAAA,EACF,GAAG,CAAC,gBAAgB,sBAAsBA,aAAY,aAAa,CAAC;AACpE,8BAAU,WAAY;AACpB,QAAI;AACJ,QAAI,aAAa,SAASC,YAAW,KAAK;AACxC,eAAS;AACT,aAAO,KAAK,mBAAmB,EAAE,KAAK,mBAAmB,EAAE,SAAS,iBAAiB;AACrF,yBAAmB,GAAG;AAAA,IACxB;AACA,WAAO,QAAQ,aAAa,IAAI,UAAU;AAC1C,WAAO,WAAY;AACjB,aAAO,QAAQ,aAAa,OAAO,UAAU;AAC7C,gBAAU,OAAO,OAAO;AAAA,IAC1B;AAAA,EACF,GAAG,CAAC,qBAAqB,oBAAoB,mBAAmB,aAAa,CAAC;AAC9E,8BAAU,WAAY;AACpB,QAAI,QAAQ,CAAC;AACb,QAAI,YAAY,SAASC,WAAU,MAAM;AACvC,UAAI,MAAM;AACR,gBAAQ,KAAK,QAAQ,KAAK,MAAM,IAAI,CAAC,IAAI;AAAA,MAC3C,OAAO;AACL,gBAAQ,CAAC;AAAA,MACX;AAAA,IACF;AACA,WAAO,QAAQ,SAAS,IAAI,SAAS;AACrC,WAAO,WAAY;AACjB,YAAM,QAAQ,SAAU,MAAM;AAC5B,eAAO,KAAK,OAAO;AAAA,MACrB,CAAC;AACD,aAAO,QAAQ,SAAS,OAAO,SAAS;AAAA,IAC1C;AAAA,EACF,GAAG,CAAC,aAAa,CAAC;AAClB,8BAAU,WAAY;AACpB,QAAI,eAAe,YAAY,OAAO;AACpC,aAAO,QAAQ,MAAM,KAAK;AAAA,IAC5B;AACA,mBAAe,UAAU;AAAA,EAC3B,GAAG,CAAC,KAAK,CAAC;AACV,8BAAU,WAAY;AACpB,QAAIF,eAAc,WAAW,OAAO,YAAY,UAAU;AACxD,UAAI,QAAQ,QAAQ,UAAU,MAAM,GAAG;AACrC,QAAAA,YAAW,QAAQ,OAAO,OAAO;AAAA,MACnC,OAAO;AACL,QAAAA,YAAW,QAAQ,SAAS,OAAO;AAAA,MACrC;AAAA,IACF;AAAA,EACF,GAAG,CAACA,aAAY,OAAO,CAAC;AACxB,wCAAoB,QAAQ,WAAY;AACtC,WAAO;AAAA,MACL,YAAY,SAAS,aAAa;AAChC,eAAO,OAAO,QAAQ,WAAW;AAAA,MACnC;AAAA,MACA,YAAY,SAAS,aAAa;AAChC,eAAO,OAAO,QAAQ,WAAW;AAAA,MACnC;AAAA,MACA,UAAU,SAAS,WAAW;AAC5B,eAAO,OAAO,QAAQ;AAAA,MACxB;AAAA,MACA,OAAO,SAASG,OAAM,QAAQ;AAC5B,eAAO,OAAO,QAAQ,MAAM,MAAM;AAAA,MACpC;AAAA,IACF;AAAA,EACF,GAAG,CAAC,CAAC;AACL,aAAO,0BAAY,WAAY;AAC7B,WAAoB,aAAAC,QAAM,cAAc,SAAS;AAAA,MAC/C,MAAM;AAAA,MACN,KAAK;AAAA,MACL;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH,GAAG,CAAC,IAAI,IAAI,CAAC;AACf;AACA,IAAI,WAAW,SAASC,UAAS,OAAO;AACtC,MAAI,QAAQ,UAAU,OAAO,yBAAAL,OAAU;AACvC,SAAoB,aAAAI,QAAM,cAAc,OAAO,IAAI;AACrD;",
  "names": ["useValidators", "isEqual", "useWidget", "uploadcare", "saveDialog", "saveFiles", "value", "React", "Uploader"]
}
